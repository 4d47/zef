=pod

=encoding utf8

=head1 Zef::Net::HTTP

HTTP 1.1 library inspired by the Golang HTTP library

=head3 Modules

=head4 B<Zef::Net::HTTP>

Contains the HTTP interface roles and HTTP helpers.

    role HTTP::BufReader {
        Supply $header-supply;
        Supply $body-supply;
        Supply $trailer-supply;
    }

    my $socket = IO::Socket::INET.new(#`connection string`);
    $socket does HTTP::BufReader;
    $socket.print(#`your raw request`);
    $socket.header-supply.tap: {.print}
    # maybe you decide to close the connection before receiving the entire body here...
    $socket.body-supply.tap:   {.print}

Apply to an C<IO::Socket::INET> or C<IO::Socket::SSL> to expose the header, body, and trailer as supplies.

    sub ChunkedReader(buf8 $buf)

Decode a chunked encoded buffer.

=head4 B<Zef::Net::HTTP::Dialer>

A C<HTTP::Dialer> implementation. 

    method dial(HTTP::URI $uri)

Obtain a scheme approriate socket to a uri.

=head4 B<Zef::Net::HTTP::Transport>

A C<HTTP::RoundTrip> implementation. Connection caching should be added here.

    method round-trip(HTTP::Request $req --> HTTP::Response)

Send the HTTP request.

    new(Str :$method = 'GET', :$url!, :$body, :$proxy, :%headers)

Create a new HTTP request.

=head4 B<Zef::Net::HTTP::Response>

    new(Str :$!header!, :$!body, :$!trailer)

Create a new HTTP response

    content(Bool :$bin)

Return the body of the HTTP response after applying and encodings requested by the header.

    $.header-grammar;

The match object after running the header through the HTTP grammars, C<Zef::Net::HTTP::Grammar>

    %.headers

A Perl6 object representation of the header's grammar parsing result (via C<Zef::Net::HTTP::Actions>)

    $.body

A supply with the raw response body without any encodings applied.

=head4 B<Zef::Net::HTTP::Client>

    new(
        HTTP::RoundTrip :$!transporter,
        HTTP::Request   :$!requestor,
        HTTP::Response  :$!responder,
        Bool :$!auto-check,
        :%!headers,
    ) {
        $!responder   := Zef::Net::HTTP::Response                    unless $!responder;
        $!requestor   := Zef::Net::HTTP::Request                     unless $!requestor;
        $!transporter := Zef::Net::HTTP::Transport.new(:$!responder) unless $!transporter;
    }

A HTTP client built from the Zef::Net::HTTP interfaces. Set C<:auto-check> to automatically handle response codes.

    method method(Str $method, $url, :$body)
    method get(Str $url)
    method post(Str $url, :$body)

Send a HTTP request with C<$method> and return a response.

=head3 Interfaces

=head4 B<HTTP::Dialer>

=head4 B<HTTP::RoundTrip>

=head4 B<HTTP::Response>

=head4 B<HTTP::Request>

=head3 Grammars

=head4 B<Zef::Net::HTTP::Grammar>

A combination of various RFC grammars to form the HTTP parser

=head4 B<Zef::Net::HTTP::Actions>

Transform a HTTP::Grammar match into a detailed Perl6 data structure.

=head4 B<Zef::Net::HTTP::Grammar::RFC1035>

Domain names - Implementation and specification

=head4 B<Zef::Net::HTTP::Grammar::RFC3066>

Tags for Identification of Languages

=head4 B<Zef::Net::HTTP::Grammar::RFC4647>

Matching of Language Tags

=head4 B<Zef::Net::HTTP::Grammar::RFC5322>

Internet Message Format

=head4 B<Zef::Net::HTTP::Grammar::RFC5646>

Tags for Identifying Languages

=head4 B<Zef::Net::HTTP::Grammar::RFC6265>

HTTP State Management Mechanism

=head4 B<Zef::Net::HTTP::Grammar::RFC6854>

Update to Internet Message Format to Allow Group Syntax in the "From:" and "Sender:" Header Fields

=head4 B<Zef::Net::HTTP::Grammar::RFC7230>

HTTP/1.1 Message Syntax and Routing

=head4 B<Zef::Net::HTTP::Grammar::RFC7231>

Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content

=head4 B<Zef::Net::HTTP::Grammar::RFC7232>

Hypertext Transfer Protocol (HTTP/1.1): Conditional Requests

=head4 B<Zef::Net::HTTP::Grammar::RFC7233>

Hypertext Transfer Protocol (HTTP/1.1): Range Requests

=head4 B<Zef::Net::HTTP::Grammar::RFC7234>

Hypertext Transfer Protocol (HTTP/1.1): Caching

=head4 B<Zef::Net::HTTP::Grammar::RFC7235>

Hypertext Transfer Protocol (HTTP/1.1): Authentication

=head4 B<Zef::Net::HTTP::Grammar::Extensions>

Additional match tokens for C<Zef::Net::HTTP::Actions> to break down certain headers into a more specific data structure.

=cut